# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

on:
  push: {}
  schedule:
  - cron: '47 8 * * 6'

jobs:
  test:
    strategy:
      matrix:
        os:
        - macos-latest
        - ubuntu-latest
        python-version:
        - '3.7'
        - '3.8'
    runs-on: ${{ matrix.os }}
    env:
      TEST_ARTIFACT_DIR: ${{ github.workspace }}/test-artifacts
    steps:
    - uses: actions/checkout@v1
    - name: Install system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew install \
          adwaita-icon-theme \
          gst-plugins-base \
          gst-plugins-good \
          gstreamer \
          gtk+3 \
          pygobject3
    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install \
          gir1.2-gst-plugins-base-1.0 \
          gir1.2-gstreamer-1.0 \
          gir1.2-gtk-3.0 \
          gstreamer1.0-plugins-good \
          libgirepository1.0-dev
        # For tests only.
        sudo apt-get install xvfb
    - uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Python dependencies
      env:
        # Brew on macOS outputs a message to set these environment variables.
        LDFLAGS: '-L/usr/local/opt/libffi/lib'
        PKG_CONFIG_PATH: '/usr/local/opt/libffi/lib/pkgconfig'
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: Lint
      env:
        # Gstreamer issues a bunch of warnings when it's inspected by pylint
        # (but not when it's run in a test), e.g.,
        # https://github.com/neomake/neomake/issues/1828. Unlike warnings in a
        # test run, these seem more likely to be confusing/misleading than
        # helpful.
        PYTHONWARNINGS: ignore
      run: |
        pip install pylint
        pylint pepper_music_player
    - name: Check formatting
      run: |
        pip install yapf
        yapf --parallel --diff --recursive .
    - name: Cache pytype analysis
      uses: actions/cache@v1
      with:
        path: .pytype
        key: pytype-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/*.py') }}
        restore-keys: |
          pytype-${{ runner.os }}-${{ matrix.python-version }}-
    - name: Run pytype
      # TODO(https://github.com/google/pytype/issues/440): Remove this
      # condition.
      if: matrix.python-version != '3.8'
      run: |
        pip install pytype
        pytype
    - name: Test
      env:
        G_DEBUG: fatal-criticals
        # See pepper_music_player/ui/screenshot_testlib.py
        TEST_FORCE_GTK_THEME: Adwaita
      run: |
        pip install pytest pytest-cov pytest-xvfb
        pytest \
          --cov=. --cov-branch --cov-report=term-missing --cov-report=xml \
          -s -v -o log_cli=true --log-cli-level=DEBUG
    - uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
    - uses: actions/upload-artifact@v1
      if: always()
      with:
        name: test-artifacts-${{ matrix.os }}-python${{ matrix.python-version }}
        path: ${{ env.TEST_ARTIFACT_DIR }}

  percy:
    if: >-
      github.event_name == 'schedule' ||
      (
        github.event_name == 'push' &&
        contains(join(github.event.commits.*.message), 'Visual-Testing: yes')
      )
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v1
      with:
        name: test-artifacts-macos-latest-python3.8
    - uses: actions/download-artifact@v1
      with:
        name: test-artifacts-ubuntu-latest-python3.8
    - name: Upload screenshots to Percy
      env:
        PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
      run: |
        npm install @percy/agent
        npx percy upload --ignore='node_modules/**'
